use marketing;

-- 8.1 Obtain the names of all physicians that have performed a medical procedure they have never been certified to perform.

	select distinct p.name from physician p where not exists (select * from trained_in t where t.physician = p.employeeid 
	and t.treatment not in (select u.procedures from undergoes u where u.physician = p.employeeid));


-- 8.2 Same as the previous query, but include the following information in the results: Physician name, name of procedure, date when the procedure was carried out, name of the patient the procedure was carried out on.

	select distinct p.name as physicianname, pr.name as procedurename, u.dateundergoes as proceduredate, pa.name as patientname from physician p join undergoes u on u.physician = p.employeeid join procedures pr on u.procedures = pr.code join patient pa on u.patient = pa.ssn 
    where pr.code not in (select t.treatment from trained_in t where t.physician = p.employeeid and t.treatment not in (select u.procedures from undergoes u where u.physician = p.employeeid));


-- 8.3 Obtain the names of all physicians that have performed a medical procedure that they are certified to perform, but such that the procedure was done at a date (Undergoes.Date) after the physician's certification expired (Trained_In.CertificationExpires).

	select p.name as physicianname from physician p join undergoes u on u.physician = p.employeeid join trained_in t on t.physician = p.employeeid and u.procedures = t.treatment where u.dateundergoes > t.certificationexpires;


-- 8.4 Same as the previous query, but include the following information in the results: Physician name, name of procedure, date when the procedure was carried out, name of the patient the procedure was carried out on, and date when the certification expired.

		select p.name as physicianname, pr.name as procedurename, u.dateundergoes as proceduredate, pt.name as patientname, t.certificationexpires as certificationexpiration from physician p 
        join undergoes u on u.physician = p.employeeid 
        join trained_in t on t.physician = p.employeeid and u.procedures = t.treatment 
        join patient pt on u.patient = pt.ssn 
        join procedures pr on u.procedures = pr.code where u.dateundergoes > t.certificationexpires;


-- 8.5 Obtain the information for appointments where a patient met with a physician other than his/her primary care physician. Show the following information: Patient name, physician name, nurse name (if any), start and end time of appointment, examination room, and the name of the patient's primary care physician.

	select p.name as patientname, ph.name as physicianname, n.name as nursename, a.start as starttime, a.end as endtime, a.examinationroom, pcp.name as primarycarephysician from appointment a join patient p on a.patient = p.ssn join physician ph on a.physician = ph.employeeid left join nurse n on a.prepnurse = n.employeeid join physician pcp on p.pcp = pcp.employeeid where a.physician != p.pcp;


-- 8.6 The Patient field in Undergoes is redundant, since we can obtain it from the Stay table. There are no constraints in force to prevent inconsistencies between these two tables. More specifically, the Undergoes table may include a row where the patient ID does not match the one we would obtain from the Stay table through the Undergoes.Stay foreign key. Select all rows from Undergoes that exhibit this inconsistency.

	select u.* from undergoes u left join stay s on u.stay = s.stayid where u.patient != s.patient or u.patient is null or s.patient is null;


-- 8.7 Obtain the names of all the nurses who have ever been on call for room 123.

	select distinct n.name from nurse n join on_call oc on n.employeeid = oc.nurse join room r on oc.blockfloor = r.blockfloor and oc.blockcode = r.blockcode where r.roomnumber = 123;


-- 8.8 The hospital has several examination rooms where appointments take place. Obtain the number of appointments that have taken place in each examination room.

	select examinationroom, count(*) as number_of_appoint from appointment group by examinationroom order by number_of_appoint desc;


-- 8.9 Obtain the names of all patients (also include, for each patient, the name of the patient's primary care physician), such that \emph{all} the following are true:
    -- The patient has been prescribed some medication by his/her primary care physician.
    -- The patient has undergone a procedure with a cost larger that $5,000
    -- The patient has had at least two appointment where the nurse who prepped the appointment was a registered nurse.
    -- The patient's primary care physician is not the head of any department.

		select Pt.Name, PhPCP.Name from Patient Pt, Physician PhPCP
		where Pt.PCP = PhPCP.EmployeeID and exists(select * from Prescribes Pr where Pr.Patient = Pt.SSN and Pr.Physician = Pt.PCP)
		and exists(select * from Undergoes U, Procedures Pr where U.Procedures = Pr.Code and U.Patient = Pt.SSN and Pr.Cost > 5000)and 2<=(select count(A.AppointmentID) from Appointment A, Nurse N
		where A.PrepNurse = N.EmployeeID and N.Registered = 1 and A.Patient = Pt.SSN)and not Pt.PCP in(select Head from Department);